@import "strip-units";

@mixin point-to-nine_slice-margin($slice: 1) {
  $offsets: (
          0 auto auto 0, 0 auto auto auto, 0 0 auto auto,
          auto auto auto 0, auto, auto 0 auto auto,
          auto auto 0 0, auto auto 0 auto, auto 0 0 auto);
  margin: nth($offsets, $slice);
}

@mixin point-to-nine_slice($slice: 1) {
  $alignments: (flex-start, center, flex-end);
  $alignment-matrix: (1 1 1 2 2 2 3 3 3);
  $justify-matrix: (1 2 3 1 2 3 1 2 3);

  justify-content: nth($alignments, nth($justify-matrix, $slice));;
  align-items: nth($alignments, nth($alignment-matrix, $slice));
}

@function point-to-nine_slice-vector($slice-index, $direction-index:1) {
  @if $direction-index == 1 { //row
    @return ceil($slice-index/3);
  }
  //column
  @return (($slice-index - 1) % 3) + 1;
}

@function point-to-nine_slice-align--length ($direction, $alignment, $basis, $area-length) {
  $align-index: point-to-nine_slice-vector($alignment, $direction);
  $align-factors: (0, 0, -1);
  $aligned-basis: $basis * nth($align-factors, $align-index);

  @return abs($aligned-basis + ($basis * point-to-nine_strip-units($area-length / 100)));
}

@mixin point-to-nine_slice-align($slice) {
  $options: flex-start, center, flex-end;
  align-self: nth($options, point-to-nine_slice-vector($slice, 1));
  float: left;
  @include point-to-nine_slice-margin($slice);
}
