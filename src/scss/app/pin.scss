@import "rgb-kind";
@import "image";
@import "slice";
@import "slices";
@import "ie";
@import "measured";


@mixin pin--debug($point: 50% 50%) {
  &:before {
    opacity: 0.5;
  }

  $guide: rgba(blue, 0.5);
  $rule: rgba(magenta, 0.5);

  background:
  linear-gradient(0, $guide, $guide),
  linear-gradient(0, $guide, $guide),
  linear-gradient(0, $rule 1px, transparent 1px),
  linear-gradient(90deg, $rule 1px, transparent 1px);
  background-size:
  1px 1px,
  1px 1px,
  1em 1em,
  1em 1em;
  background-repeat: repeat-x, repeat-y, repeat, repeat;
  background-position: $point, $point, 0 0, 0 0;

  > :nth-child(n) {
    @include pin_rgb-kind(background-color, rgba(limegreen, 0.25));
  }

  @media #{$pin_ie-8-10} {
    > * {
      @include pin_rgb-kind(background-color, rgba(limegreen, 0.25));
    }
  }
}

@mixin pin($area: 100% 20em, $point: 50% 50%, $direction: row, $alignments: (), $debug:0) {
  display: table;
  display: flex;
  flex-direction: $direction;
  justify-content: space-between;
  margin: 0;
  @include pin_measured(width, nth($area, 1));
  @include pin_measured(min-height, nth($area, 2));
  @include pin_image--cover(nth($area, 2));
  @include pin_image--interest($point);
  @include pin_slices($area, $point, $direction, $alignments);

  @if $debug > 0 {
    @include pin--debug($point);
  }
}

